version: "3.9"

services:
  backend:
    build:
      context: api
      dockerfile: Containerfile
    environment:
      PORT: $BACKEND_PORT
    ports:
      - target: $BACKEND_PORT
        published: $BACKEND_PORT
        protocol: tcp
        mode: host
    restart: unless-stopped
  frontend:
    build:
      context: frontend
      dockerfile: Containerfile
      args:
        REACT_APP_API: $APP_HOST
    environment:
      PORT: $FRONTEND_PORT
    ports:
      - target: $FRONTEND_PORT
        published: $FRONTEND_PORT
        protocol: tcp
        mode: host
    restart: unless-stopped
  nginx:
    build:
      context: nginx
      dockerfile: Containerfile
      args:
        APP_HOST: $APP_HOST
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    network_mode: host
    restart: unless-stopped
  ngrok:
    # 3.0.3-alpine
    image: docker.io/ngrok/ngrok@sha256:f0817380a8b012b9ec20f6d61eb7d2f406a77bcf2793921129979ac6f3127a51
    command: http --host-header $APP_HOST 80
    environment:
      NGROK_AUTHTOKEN: $NGROK_AUTHTOKEN
    depends_on:
      nginx:
        condition: service_started
    network_mode: host
    profiles:
      - ngrok
    restart: unless-stopped
